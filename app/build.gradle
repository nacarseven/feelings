apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'jacoco'

jacoco {
    toolVersion = "$jacocoVersion"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/javac/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code_coverage/debugAndroidTest/connected/**/*.ec'
    ])
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.feelings"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    def BASE_URL = "BASE_URL"
    def BASE_URL_GOOGLE = "BASE_URL_GOOGLE"

    buildTypes {

        debug {
            testCoverageEnabled true
            buildConfigField "String", BASE_URL, '"https://api.twitter.com/1.1/"'
            buildConfigField "String", BASE_URL_GOOGLE, '"https://language.googleapis.com/v1/"'

        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", BASE_URL, '"https://api.twitter.com/1.1/"'
            buildConfigField "String", BASE_URL_GOOGLE, '"https://language.googleapis.com/v1/"'
        }
    }

//    testOptions {
//        execution 'ANDROIDX_TEST_ORCHESTRATOR'
//        animationsDisabled true
//
//        unitTests {
//            includeAndroidResources = true
//        }
//    }

    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Platform
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$rootProject.ext.support_library"
    implementation "com.android.support:design:$rootProject.ext.support_library"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.ext.constraint_layout"
    implementation "com.android.support:support-annotations:$rootProject.ext.support_library"

    // Communication
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$rootProject.ext.converter_moshi"
    implementation "com.squareup.moshi:moshi:$rootProject.ext.moshi"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.ext.okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okhttp"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.ext.rx_java"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rx_android"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.retrofit"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$rootProject.ext.moshi"

    // Koin
    implementation "org.koin:koin-android:$rootProject.ext.koin_version"
    implementation "org.koin:koin-android-scope:$rootProject.ext.koin_version"
    implementation "org.koin:koin-android-viewmodel:$rootProject.ext.koin_version"

    // Architecture Components
    implementation "android.arch.lifecycle:$rootProject.ext.architecture_components_extension"
    kapt "android.arch.lifecycle:$rootProject.ext.architecture_components_compiler"

    // Tools
    implementation "com.orhanobut:$rootProject.ext.hawk"
    implementation "com.github.bumptech.glide:okhttp3-integration:$rootProject.ext.glide"
    implementation "com.jakewharton.threetenabp:threetenabp:$rootProject.ext.three10_version"
    implementation "com.jakewharton.timber:timber:$rootProject.ext.timber"
    implementation "com.jakewharton.rxbinding2:rxbinding:$rootProject.ext.rx_binding"
    implementation "com.jakewharton.rxbinding2:rxbinding-recyclerview-v7:$rootProject.ext.rx_binding"
    implementation "com.github.bumptech.glide:glide:$rootProject.ext.glide"
    kapt "com.github.bumptech.glide:compiler:$rootProject.ext.glide"

    testImplementation "junit:junit:$rootProject.ext.junit"
    androidTestImplementation "com.android.support.test:runner:$rootProject.ext.android_test_runner"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.ext.espresso_core"
    testImplementation "org.mockito:mockito-core:$rootProject.ext.mockito"
    testImplementation "android.arch.core:core-testing:$rootProject.ext.arch_test"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$rootProject.ext.okhttp"
    androidTestImplementation "br.com.concretesolutions:requestmatcher:$rootProject.ext.request_matcher"
    androidTestImplementation "org.koin:koin-test:$rootProject.ext.koin_version"
    androidTestImplementation "com.android.support.test:rules:$rootProject.ext.android_test_runner"

}
